const cheerio = require('cheerio');
const fs      = require('fs');
const he      = new (require('html-entities').XmlEntities)();
const md      = require('markdown-it')();
let content = md.render(fs.readFileSync('./../README.md').toString());
const $ = cheerio.load(content);
$('code').each(function() {
  const $this = $(this);
  let html = $this.html();
  $this.html(html.substring(0, html.length - 1).split('\n').join('--##NEWLINE##--'));
});
content = he.decode($.html());
const replaceAll = (a, b) => content = content.split(a).join(b);
replaceAll('\n'              , ''               );
replaceAll('<h1>'            , '[size=6][b]'    );
replaceAll('</h1>'           , '[/b][/size]\n\n');
replaceAll('<h2>'            , '[size=6][b]'    );
replaceAll('</h2>'           , '[/b][/size]\n'  );
replaceAll('<h3>'            , '[size=5][b]'    );
replaceAll('</h3>'           , '[/b][/size]\n'  );
replaceAll('<h4>'            , '[size=4][b]'    );
replaceAll('</h4>'           , '[/b][/size]\n'  );
replaceAll('<h5>'            , '[size=3][b]'    );
replaceAll('</h5>'           , '[/b][/size]\n'  );
replaceAll('<ol>'            , ''               );
replaceAll('</ol>'           , '\n'             );
replaceAll('<li>'            , '[size=3] - [b]' );
replaceAll('</li>'           , '[/b][/size]\n'  );
replaceAll('<p>'             , '[size=3]'       );
replaceAll('</p>'            , '[/size]\n\n'    );
replaceAll('<strong>'        , '[b]'            );
replaceAll('</strong>'       , '[/b]'           );
replaceAll('<pre><code>'     , '[code]'         );
replaceAll('</code></pre>'   , '[/code]\n'      );
replaceAll('<code>'          , '[i]'            );
replaceAll('</code>'         , '[/i]'           );
replaceAll('--##NEWLINE##--' , '\n');
fs.writeFileSync('./out.ubb', content);
